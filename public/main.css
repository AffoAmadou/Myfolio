/*!******************************************************************************************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js!./node_modules/postcss-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./styles/index.scss ***!
  \******************************************************************************************************************************************************/
/* http://meyerweb.com/eric/tools/css/reset/ 
   v2.0 | 20110126
   License: none (public domain)
*/
html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, hgroup,
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline;
}

/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure,
footer, header, hgroup, menu, nav, section {
  display: block;
}

body {
  line-height: 1;
}

ol, ul {
  list-style: none;
}

blockquote, q {
  quotes: none;
}

blockquote:before, blockquote:after,
q:before, q:after {
  content: "";
  content: none;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

.project__mobile__image__media, .project__image__media, .project__design__image__media, .project__content__image__media, .about__image__media, .home__gallery__media__image, .home__gallery, .navigation__logo__image, .preloader, body .content, body, html, .project, .about, .home {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

.project__process, .project__mobile__wrapper, .project__mobile, .project__design, .project__description, .home, .navigation, .preloader {
  display: flex;
  align-items: center;
  justify-content: center;
}

.project__process__title {
  font-family: "Colus";
  font-size: 2.5rem;
}
@media (max-width: 767px) {
  .project__process__title {
    font-size: 3.5rem;
  }
}

.about__title, .home__article__title, .home__title__article .home__title__article__title {
  font-family: "Colus";
  font-size: 6.5rem;
}

.project__title {
  font-family: "Colus";
  font-size: 21rem;
}
@media (max-width: 767px) {
  .project__title {
    font-size: 6.5rem;
  }
}

.project__process__type, .project__process__role {
  font-size: 1.2rem;
}
@media (max-width: 767px) {
  .project__process__type, .project__process__role {
    font-size: 3rem;
  }
}

.project__content__description__sub {
  font-size: 1.5rem;
}
@media (max-width: 767px) {
  .project__content__description__sub {
    font-size: 2.8rem;
    line-height: 1.2 !important;
  }
}

.project__process__description__submain__mob, .project__process__description__submain, .project__description__text, .about, .home__article__description {
  font-size: 1.8rem;
}
@media (max-width: 767px) {
  .project__process__description__submain__mob, .project__process__description__submain, .project__description__text, .about, .home__article__description {
    font-size: 2.8rem;
  }
}

.project__content__description, .about__cta {
  font-size: 1.8rem;
  font-weight: 600;
}
@media (max-width: 767px) {
  .project__content__description, .about__cta {
    font-size: 2.8rem;
    line-height: 1.2 !important;
  }
}

.navigation__list__link {
  font-size: 2rem;
  font-weight: bold;
}
@media (max-width: 767px) {
  .navigation__list__link {
    font-size: 3rem;
  }
}

.project__process__description__main__mob, .project__process__description__main, .project__content__title {
  font-size: 2.5rem;
  font-weight: 600;
}
@media (max-width: 767px) {
  .project__process__description__main__mob, .project__process__description__main, .project__content__title {
    font-size: 3.5rem;
  }
}

.preloader__number__text, .preloader__reverse__text {
  font-size: 3rem;
  font-weight: bold;
}

.preloader__text span span {
  font-size: 5rem;
  font-weight: bold;
}

.project, .about, .home {
  opacity: 0;
  visibility: hidden;
  z-index: 2;
}

.project__process__link {
  font-family: "Colus";
  font-size: 1.7rem;
}
@media (max-width: 767px) {
  .project__process__link {
    font-size: 2.8rem;
  }
}

@font-face {
  font-family: "Colus";
  src: url(8ced52289920702e5d12.woff2) format("woff2"), url(e5ae9e6e2dd4ed8594eb.woff) format("woff");
  font-weight: normal;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Mersad";
  src: url(7c94faf6b95b6e84b734.woff2) format("woff2"), url(dfe067b73420d47c9a8e.woff) format("woff");
  font-weight: 600;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Mersad";
  src: url(f61ded4e0e4905785ff0.woff2) format("woff2"), url(178a63200552821c8269.woff) format("woff");
  font-weight: bold;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Mersad";
  src: url(ccc69a722d4e81ecb312.woff2) format("woff2"), url(7dfe2bb64931b67d3f94.woff) format("woff");
  font-weight: normal;
  font-style: normal;
  font-display: swap;
}
*,
*::after,
*::before {
  box-sizing: border-box;
  user-select: none;
}

html {
  font-size: 0.5208333333vw;
  color: #1B1B19;
  line-height: 1;
  position: fixed;
  overflow: hidden;
}
@media (max-width: 767px) {
  html {
    font-size: 1.3333333333vw;
  }
}

body {
  font-family: "Mersad";
  font-size: 1.6rem;
  position: fixed;
}
body a {
  color: inherit;
  text-decoration: none;
  outline: none;
}
body button {
  border: none;
  background: none;
  color: inherit;
  cursor: pointer;
  outline: none;
}
body img {
  opacity: 0;
  transition: opacity 0.4s ease;
  vertical-align: middle;
}
body img.loaded {
  opacity: 1;
}
body canvas {
  pointer-events: none;
  z-index: 1;
}
body [data-animation=paragraph] span,
body [data-animation=subparagraph] span,
body [data-animation=label] span,
body [data-animation=title] span {
  display: inline-block;
  overflow: hidden;
  vertical-align: top;
}

.preloader {
  z-index: 4;
  color: #EFEFEF;
  display: grid;
  grid-template-columns: 100%;
  pointer-events: none;
  grid-template-rows: repeat(2, 1fr);
  width: 100vw;
  height: 100vh;
}

.preloader__overlay {
  width: 100%;
  height: 100%;
  background-color: #141411;
  transform: scaleY(1);
  will-change: transform;
}
.preloader__overlay:first-child {
  transform-origin: 100% 0%;
}
.preloader__overlay:nth-child(2) {
  transform-origin: 0% 100%;
}

.preloader__background {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  background-color: #10100E;
  transform-origin: 0% 100%;
  width: 95.5rem;
  height: 36.4rem;
}

.preloader__container {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 70rem;
  height: 26.4rem;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
}

.preloader__text {
  font-size: 0;
}
.preloader__text span {
  display: inline-block;
  overflow: hidden;
}
.preloader__number {
  align-self: flex-end;
  font-size: 0;
}

.preloader__reverse__number {
  font-size: 0;
}

.preloader__reverse__text {
  display: inline-block;
}

.preloader__number__text {
  display: inline-block;
}

.navigation {
  color: #EFEFEF;
  position: fixed;
  top: 0;
  left: 0;
  z-index: 3;
  height: 10.3rem;
  width: 100vw;
}
@media (max-width: 767px) {
  .navigation {
    margin-top: 1.5rem;
  }
}

.navigation__wrapper {
  width: 178.6rem;
  height: 8.9rem;
  display: flex;
  justify-content: space-between;
  align-items: center;
}
@media (max-width: 767px) {
  .navigation__wrapper {
    width: 66.8rem;
  }
}

.navigation__logo__wrapper {
  width: 3.9rem;
  height: 4.1rem;
  position: relative;
}

.navigation__logo__image {
  object-fit: cover;
}

.navigation__list {
  display: flex;
}
@media (max-width: 767px) {
  .navigation__list {
    gap: 2rem;
  }
}

.navigation__list__item {
  margin-left: 0.9rem;
}
@media (max-width: 767px) {
  .navigation__list__item {
    margin-left: 4rem;
  }
}

.navigation__list__link {
  color: black;
}

.home {
  overflow: hidden;
  text-align: center;
}

.home__title__article {
  position: absolute;
  top: 16.4rem;
  left: 70.8rem;
  width: 50.4rem;
  opacity: 0;
  transition: opacity 0.4s ease;
}
@media (max-width: 767px) {
  .home__title__article {
    top: 29rem;
    left: 12.3rem;
  }
}
.home__title__article--active {
  opacity: 1;
  transition-delay: 0.4s;
}
.home__title__article .home__title__article__title {
  transform: translateY(-5rem);
  /* moves the element down by 5rem */
  transition: transform 0.4s ease;
  /* transition effect */
}
.home__title__article--active .home__title__article__title {
  transform: translateY(0);
  /* moves the element back to its original position */
  transition-delay: 0.4s;
}

.home__gallery__wrapper {
  display: flex;
  align-items: center;
  left: 50%;
  top: 50%;
  position: absolute;
  transform: translate(-32.2655rem, -50%);
}

.home__gallery__link {
  display: block;
  margin: 0 3rem;
}
.home__gallery__link:first-child {
  margin-left: 0;
}
.home__gallery__link:last-child {
  margin-right: 0;
}
@media (max-width: 767px) {
  .home__gallery__link {
    margin: 0 0.75rem;
  }
}

.home__gallery__media {
  width: 64.531rem;
  height: 34.613rem;
  position: relative;
  visibility: hidden;
}

.home__gallery__media__image {
  object-fit: cover;
}

.home__article {
  position: absolute;
  bottom: 8rem;
  left: 70.5rem;
  opacity: 0;
  transition: opacity 0.4s ease;
}
.home__article--active {
  opacity: 1;
  transition-delay: 0.4s;
}
@media (max-width: 767px) {
  .home__article {
    bottom: 26rem;
    left: 11.8rem;
  }
}
.home__article .home__article__title,
.home__article .home__article__description {
  transform: translateY(5rem);
  /* moves the element down by 5rem */
  transition: transform 0.4s ease;
  /* transition effect */
}
.home__article--active .home__article__title,
.home__article--active .home__article__description {
  transform: translateY(0);
  /* moves the element back to its original position */
  transition-delay: 0.4s;
}

@media (max-width: 767px) {
  .home__article__title {
    display: none;
  }
}

.home__article__description {
  max-width: 51.3rem;
}
@media (max-width: 767px) {
  .home__article__description {
    font-size: 3.3rem;
  }
}

.about__wrapper {
  padding-top: 24.5rem;
}

.about__header {
  width: 161.3rem;
  height: 72.9rem;
  background-color: aliceblue;
  margin: 0 auto;
  display: flex;
}

.about__image {
  width: 87.9rem;
  height: 100%;
  position: relative;
}

.about__image__media {
  object-fit: cover;
}

.about__header__content {
  width: 73.4rem;
  height: 100%;
  padding-left: 8.7rem;
  padding-top: 8.3rem;
  background-color: lightcoral;
}

.about__description__text {
  padding: 3.6rem 0;
  width: 54.7rem;
  line-height: 2.1rem;
}

.about__content__text {
  width: 57.2rem;
  line-height: 2.1rem;
}

.about__text {
  width: 57.2rem;
  padding: 3.6rem 0;
  line-height: 2.1rem;
}

.about__cta {
  text-decoration: underline;
}

.project__content {
  width: 100%;
  height: 100vh;
}
@media (max-width: 767px) {
  .project__content {
    height: fit-content;
    padding-bottom: 9rem;
  }
}

.project__content__wrapper {
  display: flex;
  padding: 0 14rem;
  align-items: center;
  width: 100%;
  height: 100%;
  justify-content: space-between;
}
@media (max-width: 767px) {
  .project__content__wrapper {
    flex-direction: column;
    justify-content: flex-start;
    padding: 0;
  }
}

.project__content__image {
  width: 97.3rem;
  height: 49.7rem;
  position: relative;
}
@media (max-width: 767px) {
  .project__content__image {
    width: 75rem;
    height: 38.3rem;
    margin-bottom: 9rem;
  }
}

.project__content__image__media {
  object-fit: cover;
}

.project__content__content {
  display: flex;
}
@media (max-width: 767px) {
  .project__content__content {
    flex-direction: column;
    align-items: center;
    width: 100%;
  }
}

.project__content__title {
  margin-right: 4rem;
}
@media (max-width: 767px) {
  .project__content__title {
    margin-right: 0;
    margin-bottom: 4rem;
    text-align: center;
  }
}

.project__content__description {
  margin-bottom: 2rem;
  line-height: 2.1rem;
}
@media (max-width: 767px) {
  .project__content__description {
    margin-bottom: 4rem;
    text-align: center;
  }
}

.project__content__description__sub {
  line-height: 1.8rem;
}
@media (max-width: 767px) {
  .project__content__description__sub {
    text-align: center;
  }
}

.project__description {
  width: 100vw;
  height: 42.8rem;
}
@media (max-width: 767px) {
  .project__description {
    height: 42.4rem;
  }
}

.project__description__text {
  line-height: 2.1rem;
  width: 96.5rem;
  text-align: center;
}
@media (max-width: 767px) {
  .project__description__text {
    width: 51.9rem;
    line-height: 3.2rem;
  }
}

.project__design {
  width: 100%;
  height: 100vh;
  margin-bottom: 0.1rem;
}
@media (max-width: 767px) {
  .project__design {
    height: fit-content;
    margin-bottom: 0;
  }
}

.project__design__image {
  width: 120.2rem;
  height: 61.4rem;
  position: relative;
}
@media (max-width: 767px) {
  .project__design__image {
    aspect-ratio: 16/9;
    width: 100%;
    height: auto;
    margin-top: 6rem;
    margin-bottom: 6rem;
  }
}

.project__design__image__media {
  object-fit: cover;
}

.project {
  width: 100vw;
  overflow: hidden;
  padding-bottom: 10rem;
}
@media (max-width: 767px) {
  .project .project__design:last-child {
    background-color: red !important;
    padding-bottom: 7rem;
  }
}

.project__head {
  width: 100%;
  height: 100vh;
  margin-top: 15rem;
  position: relative;
}
@media (max-width: 767px) {
  .project__head {
    margin-top: 28rem;
    height: 42.2rem;
  }
}

.project__image {
  width: 100vw;
  height: 100%;
  position: relative;
}
@media (max-width: 767px) {
  .project__image {
    height: 42.2rem;
  }
}

.project__image__media {
  object-fit: cover;
}

.project__title {
  text-align: center;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  color: #EFEFEF;
  width: 126.1rem;
}
@media (max-width: 767px) {
  .project__title {
    width: 52.4rem;
    color: black;
    top: -4rem;
  }
}

.project__mobile {
  width: 100%;
  height: 100vh;
  margin-bottom: 0.1rem;
  pointer-events: none;
  overflow: hidden;
  visibility: hidden;
}
@media (max-width: 767px) {
  .project__mobile {
    height: 28rem;
  }
}

.project__mobile__wrapper {
  width: 100%;
  justify-content: space-around;
}
@media (max-width: 767px) {
  .project__mobile__wrapper {
    display: none;
  }
}

.project__mobile__image {
  width: 30rem;
  height: 64.886rem;
  position: relative;
}

.project__mobile__image__media {
  object-fit: cover;
}

.project__process {
  width: 100%;
  padding: 26rem 0;
}

.project__process__wrapper {
  display: flex;
  width: 109rem;
  align-items: stretch;
  justify-content: space-between;
}
@media (max-width: 767px) {
  .project__process__wrapper {
    flex-direction: column;
    width: 100%;
  }
}

.project__process__intitulation {
  margin-bottom: 18.5rem;
}
@media (max-width: 767px) {
  .project__process__intitulation {
    margin-bottom: 9rem;
    text-align: center;
  }
}

@media (max-width: 767px) {
  .project__process__title {
    margin-bottom: 1rem;
  }
}

.project__process__subtitle {
  display: flex;
  flex-direction: column;
}

.project__process__role {
  margin-bottom: 0.1rem;
}

.project__process__description {
  display: flex;
  flex-direction: column;
}
@media (max-width: 767px) {
  .project__process__description {
    text-align: center;
    align-items: center;
  }
}

.project__process__description__main {
  margin-bottom: 3rem;
  line-height: 3rem;
}
@media (max-width: 767px) {
  .project__process__description__main {
    width: 85%;
    line-height: 1.2;
    display: none;
  }
}

.project__process__description__submain {
  color: #777777;
  margin-bottom: 4rem;
  line-height: 2.1rem;
}
@media (max-width: 767px) {
  .project__process__description__submain {
    width: 85%;
    line-height: 1.2;
    display: none;
  }
}

.project__process__description__main__mob {
  margin-bottom: 3rem;
  line-height: 3rem;
  display: none;
}
@media (max-width: 767px) {
  .project__process__description__main__mob {
    display: block;
    width: 85%;
    line-height: 1.2;
  }
}

.project__process__description__submain__mob {
  color: #777777;
  margin-bottom: 4rem;
  line-height: 2.1rem;
  display: none;
}
@media (max-width: 767px) {
  .project__process__description__submain__mob {
    display: block;
    width: 85%;
    line-height: 1.2;
  }
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/