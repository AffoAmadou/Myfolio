/*! For license information please see main.eec34e152e0598c4751d.hot-update.js.LICENSE.txt */
"use strict";self.webpackHotUpdatestarter("main",{"./app/components/Canvas/Project/Picture.js":(e,t,s)=>{s.r(t),s.d(t,{default:()=>o});var i=s("./node_modules/ogl/src/extras/Plane.js"),h=s("./node_modules/ogl/src/core/Program.js"),a=s("./node_modules/ogl/src/core/Mesh.js"),r=s("./app/shaders/plane-fragment.glsl"),n=s("./app/shaders/plane-vertex.glsl");const o=class{constructor({gl:e,scene:t,sizes:s}){this.element=document.querySelector(".project__image__media "),this.gl=e,this.scene=t,this.sizes=s,this.geometry=new i.Plane(this.gl),this.createTexture(),this.createProgram(),this.createMesh(),this.extra={x:0,y:0}}createTexture(){const e=this.element.getAttribute("data-src");this.texture=window.TEXTURES[e]}createProgram(){this.program=new h.Program(this.gl,{fragment:r.default,vertex:n.default,uniforms:{uAlpha:{value:1},uSpeed:{value:0},uViewportSizes:{value:[this.sizes.width,this.sizes.height]},tMap:{value:this.texture}}})}createMesh(){this.mesh=new a.Mesh(this.gl,{geometry:this.geometry,program:this.program}),this.mesh.setParent(this.scene),this.mesh.scale.x=2}createBounds({sizes:e}){this.sizes=e,this.bounds=this.element.getBoundingClientRect(),this.updateScale(),this.updateX(),this.updateY()}show(){}hide(){}onResize(e,t){this.extra={x:0,y:0},this.createBounds(e),this.updateX(t&&t.x),this.updateY(t&&t.y)}updateScale(){this.width=this.bounds.width/window.innerWidth,this.height=this.bounds.height/window.innerHeight,this.mesh.scale.x=this.sizes.width*this.width,this.mesh.scale.y=this.sizes.height*this.height}updateX(){this.x=this.bounds.left/window.innerWidth,this.mesh.position.x=-this.sizes.width/2+this.mesh.scale.x/2+this.x*this.sizes.width+this.extra.x}updateY(e=0){this.y=(this.bounds.top+e)/window.innerHeight,this.mesh.position.y=this.sizes.height/2-this.mesh.scale.y/2-this.y*this.sizes.height+this.extra.y}update(e,t,s){this.bounds&&(this.updateX(),this.updateY(e))}}}},(function(e){e.h=()=>"daba247deeff104cb6e7"}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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S0FBS3NDLFFBQVFJLEdBQ2hCLGtCQ3JITFMsRUFBb0JDLEVBQUksSUFBTSIsInNvdXJjZXMiOlsid2VicGFjazovL3N0YXJ0ZXIvLi9hcHAvY29tcG9uZW50cy9DYW52YXMvUHJvamVjdC9QaWN0dXJlLmpzIiwid2VicGFjazovL3N0YXJ0ZXIvd2VicGFjay9ydW50aW1lL2dldEZ1bGxIYXNoIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE1lc2gsIFByb2dyYW0sIFRleHR1cmUsIFBsYW5lIH0gZnJvbSAnb2dsJ1xyXG5cclxuaW1wb3J0IGZyYWdtZW50IGZyb20gJ3NoYWRlcnMvcGxhbmUtZnJhZ21lbnQuZ2xzbCdcclxuaW1wb3J0IHZlcnRleCBmcm9tICdzaGFkZXJzL3BsYW5lLXZlcnRleC5nbHNsJ1xyXG5cclxuaW1wb3J0IEdTQVAgZnJvbSAnZ3NhcCdcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIHtcclxuICAgIGNvbnN0cnVjdG9yKHsgZ2wsIHNjZW5lLCBzaXplcyB9KSB7XHJcbiAgICAgICAgdGhpcy5lbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnByb2plY3RfX2ltYWdlX19tZWRpYSAnKVxyXG4gICAgICAgIHRoaXMuZ2wgPSBnbFxyXG4gICAgICAgIHRoaXMuc2NlbmUgPSBzY2VuZVxyXG4gICAgICAgIHRoaXMuc2l6ZXMgPSBzaXplc1xyXG5cclxuICAgICAgICB0aGlzLmdlb21ldHJ5ID0gbmV3IFBsYW5lKHRoaXMuZ2wpXHJcblxyXG4gICAgICAgIHRoaXMuY3JlYXRlVGV4dHVyZSgpXHJcbiAgICAgICAgdGhpcy5jcmVhdGVQcm9ncmFtKClcclxuICAgICAgICB0aGlzLmNyZWF0ZU1lc2goKVxyXG5cclxuICAgICAgICB0aGlzLmV4dHJhID0ge1xyXG4gICAgICAgICAgICB4OiAwLFxyXG4gICAgICAgICAgICB5OiAwXHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgY3JlYXRlVGV4dHVyZSgpIHtcclxuICAgICAgICBjb25zdCBpbWFnZSA9IHRoaXMuZWxlbWVudC5nZXRBdHRyaWJ1dGUoJ2RhdGEtc3JjJylcclxuICAgICAgICB0aGlzLnRleHR1cmUgPSB3aW5kb3cuVEVYVFVSRVNbaW1hZ2VdXHJcbiAgICB9XHJcblxyXG4gICAgY3JlYXRlUHJvZ3JhbSgpIHtcclxuXHJcbiAgICAgICAgdGhpcy5wcm9ncmFtID0gbmV3IFByb2dyYW0odGhpcy5nbCwge1xyXG4gICAgICAgICAgICBmcmFnbWVudCxcclxuICAgICAgICAgICAgdmVydGV4LFxyXG4gICAgICAgICAgICB1bmlmb3Jtczoge1xyXG4gICAgICAgICAgICAgICAgdUFscGhhOiB7IHZhbHVlOiAxIH0sXHJcbiAgICAgICAgICAgICAgICB1U3BlZWQ6IHsgdmFsdWU6IDAgfSxcclxuICAgICAgICAgICAgICAgIHVWaWV3cG9ydFNpemVzOiB7IHZhbHVlOiBbdGhpcy5zaXplcy53aWR0aCwgdGhpcy5zaXplcy5oZWlnaHRdIH0sXHJcbiAgICAgICAgICAgICAgICB0TWFwOiB7IHZhbHVlOiB0aGlzLnRleHR1cmUgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSlcclxuXHJcbiAgICB9XHJcblxyXG4gICAgY3JlYXRlTWVzaCgpIHtcclxuICAgICAgICB0aGlzLm1lc2ggPSBuZXcgTWVzaCh0aGlzLmdsLCB7XHJcbiAgICAgICAgICAgIGdlb21ldHJ5OiB0aGlzLmdlb21ldHJ5LFxyXG4gICAgICAgICAgICBwcm9ncmFtOiB0aGlzLnByb2dyYW1cclxuICAgICAgICB9KVxyXG5cclxuICAgICAgICB0aGlzLm1lc2guc2V0UGFyZW50KHRoaXMuc2NlbmUpXHJcblxyXG4gICAgICAgIHRoaXMubWVzaC5zY2FsZS54ID0gMlxyXG4gICAgfVxyXG5cclxuICAgIGNyZWF0ZUJvdW5kcyh7IHNpemVzIH0pIHtcclxuICAgICAgICB0aGlzLnNpemVzID0gc2l6ZXNcclxuXHJcbiAgICAgICAgdGhpcy5ib3VuZHMgPSB0aGlzLmVsZW1lbnQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KClcclxuXHJcbiAgICAgICAgdGhpcy51cGRhdGVTY2FsZSgpXHJcbiAgICAgICAgdGhpcy51cGRhdGVYKClcclxuICAgICAgICB0aGlzLnVwZGF0ZVkoKVxyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogXHJcbiAgICAgKiBBbmltYXRpb25zXHJcbiAgICAgKi9cclxuXHJcblxyXG4gICAgc2hvdygpIHtcclxuXHJcbiAgICB9XHJcblxyXG4gICAgaGlkZSgpIHtcclxuXHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAgKiBFdmVudHNcclxuICAgICAgKi9cclxuICAgIG9uUmVzaXplKHNpemVzLCBzY3JvbGwpIHtcclxuICAgICAgICB0aGlzLmV4dHJhID0ge1xyXG4gICAgICAgICAgICB4OiAwLFxyXG4gICAgICAgICAgICB5OiAwXHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMuY3JlYXRlQm91bmRzKHNpemVzKVxyXG4gICAgICAgIHRoaXMudXBkYXRlWChzY3JvbGwgJiYgc2Nyb2xsLngpXHJcbiAgICAgICAgdGhpcy51cGRhdGVZKHNjcm9sbCAmJiBzY3JvbGwueSlcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIExPT1BcclxuICAgICAqL1xyXG4gICAgdXBkYXRlU2NhbGUoKSB7XHJcbiAgICAgICAgdGhpcy53aWR0aCA9IHRoaXMuYm91bmRzLndpZHRoIC8gd2luZG93LmlubmVyV2lkdGhcclxuICAgICAgICB0aGlzLmhlaWdodCA9IHRoaXMuYm91bmRzLmhlaWdodCAvIHdpbmRvdy5pbm5lckhlaWdodFxyXG5cclxuICAgICAgICB0aGlzLm1lc2guc2NhbGUueCA9IHRoaXMuc2l6ZXMud2lkdGggKiB0aGlzLndpZHRoXHJcbiAgICAgICAgdGhpcy5tZXNoLnNjYWxlLnkgPSB0aGlzLnNpemVzLmhlaWdodCAqIHRoaXMuaGVpZ2h0XHJcbiAgICB9XHJcblxyXG4gICAgdXBkYXRlWCgpIHtcclxuICAgICAgICB0aGlzLnggPSAodGhpcy5ib3VuZHMubGVmdCkgLyB3aW5kb3cuaW5uZXJXaWR0aFxyXG4gICAgICAgIHRoaXMubWVzaC5wb3NpdGlvbi54ID0gKC10aGlzLnNpemVzLndpZHRoIC8gMikgKyAodGhpcy5tZXNoLnNjYWxlLnggLyAyKSArICh0aGlzLnggKiB0aGlzLnNpemVzLndpZHRoKSArIHRoaXMuZXh0cmEueFxyXG4gICAgfVxyXG5cclxuICAgIHVwZGF0ZVkoeSA9IDApIHtcclxuICAgICAgICB0aGlzLnkgPSAodGhpcy5ib3VuZHMudG9wICsgeSkgLyB3aW5kb3cuaW5uZXJIZWlnaHRcclxuICAgICAgICB0aGlzLm1lc2gucG9zaXRpb24ueSA9ICh0aGlzLnNpemVzLmhlaWdodCAvIDIpIC0gKHRoaXMubWVzaC5zY2FsZS55IC8gMikgLSAodGhpcy55ICogdGhpcy5zaXplcy5oZWlnaHQpICsgdGhpcy5leHRyYS55XHJcbiAgICB9XHJcblxyXG4gICAgdXBkYXRlKHNjcm9sbCwgc3BlZWQsIGluZGV4KSB7XHJcbiAgICAgICAgaWYgKCF0aGlzLmJvdW5kcykgcmV0dXJuXHJcbiAgICAgICAgdGhpcy51cGRhdGVYKClcclxuICAgICAgICB0aGlzLnVwZGF0ZVkoc2Nyb2xsKVxyXG4gICAgfVxyXG59IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5oID0gKCkgPT4gKFwiZGFiYTI0N2RlZWZmMTA0Y2I2ZTdcIikiXSwibmFtZXMiOlsiY29uc3RydWN0b3IiLCJnbCIsInNjZW5lIiwic2l6ZXMiLCJ0aGlzIiwiZWxlbWVudCIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsImdlb21ldHJ5IiwiUGxhbmUiLCJjcmVhdGVUZXh0dXJlIiwiY3JlYXRlUHJvZ3JhbSIsImNyZWF0ZU1lc2giLCJleHRyYSIsIngiLCJ5IiwiaW1hZ2UiLCJnZXRBdHRyaWJ1dGUiLCJ0ZXh0dXJlIiwid2luZG93IiwiVEVYVFVSRVMiLCJwcm9ncmFtIiwiUHJvZ3JhbSIsImZyYWdtZW50IiwidmVydGV4IiwidW5pZm9ybXMiLCJ1QWxwaGEiLCJ2YWx1ZSIsInVTcGVlZCIsInVWaWV3cG9ydFNpemVzIiwid2lkdGgiLCJoZWlnaHQiLCJ0TWFwIiwibWVzaCIsIk1lc2giLCJzZXRQYXJlbnQiLCJzY2FsZSIsImNyZWF0ZUJvdW5kcyIsImJvdW5kcyIsImdldEJvdW5kaW5nQ2xpZW50UmVjdCIsInVwZGF0ZVNjYWxlIiwidXBkYXRlWCIsInVwZGF0ZVkiLCJzaG93IiwiaGlkZSIsIm9uUmVzaXplIiwic2Nyb2xsIiwiaW5uZXJXaWR0aCIsImlubmVySGVpZ2h0IiwibGVmdCIsInBvc2l0aW9uIiwidG9wIiwidXBkYXRlIiwic3BlZWQiLCJpbmRleCIsIl9fd2VicGFja19yZXF1aXJlX18iLCJoIl0sInNvdXJjZVJvb3QiOiIifQ==