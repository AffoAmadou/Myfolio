/*! For license information please see main.0a3de74c6c1440e60239.hot-update.js.LICENSE.txt */
"use strict";self.webpackHotUpdatestarter("main",{"./app/components/Canvas/Project/index.js":(e,s,t)=>{t.r(s),t.d(s,{default:()=>r});var i=t("./node_modules/lodash/lodash.js"),o=t("./node_modules/ogl/src/core/Transform.js"),a=t("./node_modules/ogl/src/extras/Plane.js"),l=t("./app/components/Canvas/Project/Gallery.js"),n=t("./app/components/Canvas/Project/Picture.js");const r=class{constructor({gl:e,scene:s,sizes:t,transition:i}){this.id="project",this.scene=s,console.log(this.scene),this.gl=e,this.sizes=t,this.group=new o.Transform,this.transition=i,this.createGeometry(),this.createGalleries(),this.group.setParent(s),this.show()}createGeometry(){this.geometry=new a.Plane(this.gl)}createGalleries(){this.Picture=new n.default({gl:this.gl,scene:this.scene,sizes:this.sizes,transition:this.transition}),this.galleriesElements=document.querySelectorAll(".project__mobile"),this.galleries=(0,i.map)(this.galleriesElements,((e,s)=>new l.default({element:e,geometry:this.geometry,index:s,gl:this.gl,scene:this.group,sizes:this.sizes})))}show(){(0,i.map)(this.galleries,(e=>e.show()))}hide(){(0,i.map)(this.galleries,(e=>e.hide()))}onResize(e){(0,i.map)(this.galleries,(s=>s.onResize(e)))}onTouchDown(e){(0,i.map)(this.galleries,(s=>s.onTouchDown(e)))}onTouchMove(e){(0,i.map)(this.galleries,(s=>s.onTouchMove(e)))}onTouchUp(e){(0,i.map)(this.galleries,(s=>s.onTouchUp(e)))}onWheel({pixelX:e,pixelY:s}){}update(e){(0,i.map)(this.galleries,(s=>s.update(e)))}destroy(){(0,i.map)(this.galleries,(e=>e.destroy()))}}}},(function(e){e.h=()=>"aabd9a350829c316fc0a"}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi4wYTNkZTc0YzZjMTQ0MGU2MDIzOS5ob3QtdXBkYXRlLmpzIiwibWFwcGluZ3MiOiI7a1hBTUEsY0FDSUEsYUFBWSxHQUFFQyxFQUFGLE1BQU1DLEVBQU4sTUFBYUMsRUFBYixXQUFvQkMsSUFDNUJDLEtBQUtDLEdBQUssVUFDVkQsS0FBS0gsTUFBUUEsRUFFYkssUUFBUUMsSUFBSUgsS0FBS0gsT0FDakJHLEtBQUtKLEdBQUtBLEVBQ1ZJLEtBQUtGLE1BQVFBLEVBRWJFLEtBQUtJLE1BQVEsSUFBSUMsRUFBQUEsVUFDakJMLEtBQUtELFdBQWFBLEVBQ2xCQyxLQUFLTSxpQkFDTE4sS0FBS08sa0JBRUxQLEtBQUtJLE1BQU1JLFVBQVVYLEdBRXJCRyxLQUFLUyxNQUNSLENBRURILGlCQUNJTixLQUFLVSxTQUFXLElBQUlDLEVBQUFBLE1BQU1YLEtBQUtKLEdBQ2xDLENBRURXLGtCQUVJUCxLQUFLWSxRQUFVLElBQUlBLEVBQUFBLFFBQVEsQ0FBRWhCLEdBQUlJLEtBQUtKLEdBQUlDLE1BQU9HLEtBQUtILE1BQU9DLE1BQU9FLEtBQUtGLE1BQU9DLFdBQVlDLEtBQUtELGFBQ2pHQyxLQUFLYSxrQkFBb0JDLFNBQVNDLGlCQUFpQixvQkFFbkRmLEtBQUtnQixXQUFZQyxFQUFBQSxFQUFBQSxLQUFJakIsS0FBS2EsbUJBQW1CLENBQUNLLEVBQVNDLElBQzVDLElBQUlDLEVBQUFBLFFBQVEsQ0FDZkYsVUFDQVIsU0FBVVYsS0FBS1UsU0FDZlMsUUFDQXZCLEdBQUlJLEtBQUtKLEdBQ1RDLE1BQU9HLEtBQUtJLE1BQ1pOLE1BQU9FLEtBQUtGLFNBR3ZCLENBRURXLFFBQ0lRLEVBQUFBLEVBQUFBLEtBQUlqQixLQUFLZ0IsV0FBV0ssR0FBV0EsRUFBUVosUUFDMUMsQ0FFRGEsUUFDSUwsRUFBQUEsRUFBQUEsS0FBSWpCLEtBQUtnQixXQUFXSyxHQUFXQSxFQUFRQyxRQUMxQyxDQU1EQyxTQUFTQyxJQUNMUCxFQUFBQSxFQUFBQSxLQUFJakIsS0FBS2dCLFdBQVdLLEdBQVdBLEVBQVFFLFNBQVNDLElBQ25ELENBRURDLFlBQVlELElBQ1JQLEVBQUFBLEVBQUFBLEtBQUlqQixLQUFLZ0IsV0FBV0ssR0FBV0EsRUFBUUksWUFBWUQsSUFDdEQsQ0FDREUsWUFBWUYsSUFDUlAsRUFBQUEsRUFBQUEsS0FBSWpCLEtBQUtnQixXQUFXSyxHQUFXQSxFQUFRSyxZQUFZRixJQUN0RCxDQUNERyxVQUFVSCxJQUNOUCxFQUFBQSxFQUFBQSxLQUFJakIsS0FBS2dCLFdBQVdLLEdBQVdBLEVBQVFNLFVBQVVILElBQ3BELENBRURJLFNBQVEsT0FBRUMsRUFBRixPQUFVQyxJQUNqQixDQU1EQyxPQUFPQyxJQUNIZixFQUFBQSxFQUFBQSxLQUFJakIsS0FBS2dCLFdBQVdLLEdBQVdBLEVBQVFVLE9BQU9DLElBQ2pELENBRURDLFdBQ0loQixFQUFBQSxFQUFBQSxLQUFJakIsS0FBS2dCLFdBQVdLLEdBQVdBLEVBQVFZLFdBQzFDLGtCQ3JGTEMsRUFBb0JDLEVBQUksSUFBTSIsInNvdXJjZXMiOlsid2VicGFjazovL3N0YXJ0ZXIvLi9hcHAvY29tcG9uZW50cy9DYW52YXMvUHJvamVjdC9pbmRleC5qcyIsIndlYnBhY2s6Ly9zdGFydGVyL3dlYnBhY2svcnVudGltZS9nZXRGdWxsSGFzaCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBtYXAgfSBmcm9tIFwibG9kYXNoXCJcclxuaW1wb3J0IHsgUGxhbmUsIFRyYW5zZm9ybSB9IGZyb20gXCJvZ2xcIlxyXG5pbXBvcnQgR2FsbGVyeSBmcm9tIFwiLi9HYWxsZXJ5XCJcclxuaW1wb3J0IFBpY3R1cmUgZnJvbSBcIi4vUGljdHVyZVwiXHJcbmltcG9ydCBHU0FQIGZyb20gJ2dzYXAnXHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyB7XHJcbiAgICBjb25zdHJ1Y3Rvcih7IGdsLCBzY2VuZSwgc2l6ZXMsIHRyYW5zaXRpb24gfSkge1xyXG4gICAgICAgIHRoaXMuaWQgPSAncHJvamVjdCdcclxuICAgICAgICB0aGlzLnNjZW5lID0gc2NlbmVcclxuXHJcbiAgICAgICAgY29uc29sZS5sb2codGhpcy5zY2VuZSlcclxuICAgICAgICB0aGlzLmdsID0gZ2xcclxuICAgICAgICB0aGlzLnNpemVzID0gc2l6ZXNcclxuXHJcbiAgICAgICAgdGhpcy5ncm91cCA9IG5ldyBUcmFuc2Zvcm0oKVxyXG4gICAgICAgIHRoaXMudHJhbnNpdGlvbiA9IHRyYW5zaXRpb25cclxuICAgICAgICB0aGlzLmNyZWF0ZUdlb21ldHJ5KClcclxuICAgICAgICB0aGlzLmNyZWF0ZUdhbGxlcmllcygpXHJcblxyXG4gICAgICAgIHRoaXMuZ3JvdXAuc2V0UGFyZW50KHNjZW5lKVxyXG5cclxuICAgICAgICB0aGlzLnNob3coKVxyXG4gICAgfVxyXG5cclxuICAgIGNyZWF0ZUdlb21ldHJ5KCkge1xyXG4gICAgICAgIHRoaXMuZ2VvbWV0cnkgPSBuZXcgUGxhbmUodGhpcy5nbClcclxuICAgIH1cclxuXHJcbiAgICBjcmVhdGVHYWxsZXJpZXMoKSB7XHJcblxyXG4gICAgICAgIHRoaXMuUGljdHVyZSA9IG5ldyBQaWN0dXJlKHsgZ2w6IHRoaXMuZ2wsIHNjZW5lOiB0aGlzLnNjZW5lLCBzaXplczogdGhpcy5zaXplcywgdHJhbnNpdGlvbjogdGhpcy50cmFuc2l0aW9uIH0pXHJcbiAgICAgICAgdGhpcy5nYWxsZXJpZXNFbGVtZW50cyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5wcm9qZWN0X19tb2JpbGUnKVxyXG5cclxuICAgICAgICB0aGlzLmdhbGxlcmllcyA9IG1hcCh0aGlzLmdhbGxlcmllc0VsZW1lbnRzLCAoZWxlbWVudCwgaW5kZXgpID0+IHtcclxuICAgICAgICAgICAgcmV0dXJuIG5ldyBHYWxsZXJ5KHtcclxuICAgICAgICAgICAgICAgIGVsZW1lbnQsXHJcbiAgICAgICAgICAgICAgICBnZW9tZXRyeTogdGhpcy5nZW9tZXRyeSxcclxuICAgICAgICAgICAgICAgIGluZGV4LFxyXG4gICAgICAgICAgICAgICAgZ2w6IHRoaXMuZ2wsXHJcbiAgICAgICAgICAgICAgICBzY2VuZTogdGhpcy5ncm91cCxcclxuICAgICAgICAgICAgICAgIHNpemVzOiB0aGlzLnNpemVzXHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgfSlcclxuICAgIH1cclxuXHJcbiAgICBzaG93KCkge1xyXG4gICAgICAgIG1hcCh0aGlzLmdhbGxlcmllcywgZ2FsbGVyeSA9PiBnYWxsZXJ5LnNob3coKSlcclxuICAgIH1cclxuXHJcbiAgICBoaWRlKCkge1xyXG4gICAgICAgIG1hcCh0aGlzLmdhbGxlcmllcywgZ2FsbGVyeSA9PiBnYWxsZXJ5LmhpZGUoKSlcclxuICAgIH1cclxuXHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBFdmVudHNcclxuICAgICAqL1xyXG4gICAgb25SZXNpemUoZXZlbnQpIHtcclxuICAgICAgICBtYXAodGhpcy5nYWxsZXJpZXMsIGdhbGxlcnkgPT4gZ2FsbGVyeS5vblJlc2l6ZShldmVudCkpXHJcbiAgICB9XHJcblxyXG4gICAgb25Ub3VjaERvd24oZXZlbnQpIHtcclxuICAgICAgICBtYXAodGhpcy5nYWxsZXJpZXMsIGdhbGxlcnkgPT4gZ2FsbGVyeS5vblRvdWNoRG93bihldmVudCkpXHJcbiAgICB9XHJcbiAgICBvblRvdWNoTW92ZShldmVudCkge1xyXG4gICAgICAgIG1hcCh0aGlzLmdhbGxlcmllcywgZ2FsbGVyeSA9PiBnYWxsZXJ5Lm9uVG91Y2hNb3ZlKGV2ZW50KSlcclxuICAgIH1cclxuICAgIG9uVG91Y2hVcChldmVudCkge1xyXG4gICAgICAgIG1hcCh0aGlzLmdhbGxlcmllcywgZ2FsbGVyeSA9PiBnYWxsZXJ5Lm9uVG91Y2hVcChldmVudCkpXHJcbiAgICB9XHJcblxyXG4gICAgb25XaGVlbCh7IHBpeGVsWCwgcGl4ZWxZIH0pIHtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIFVQREFURVxyXG4gICAgICovXHJcblxyXG4gICAgdXBkYXRlKHNjcm9sbCkge1xyXG4gICAgICAgIG1hcCh0aGlzLmdhbGxlcmllcywgZ2FsbGVyeSA9PiBnYWxsZXJ5LnVwZGF0ZShzY3JvbGwpKVxyXG4gICAgfVxyXG5cclxuICAgIGRlc3Ryb3koKSB7XHJcbiAgICAgICAgbWFwKHRoaXMuZ2FsbGVyaWVzLCBnYWxsZXJ5ID0+IGdhbGxlcnkuZGVzdHJveSgpKVxyXG4gICAgfVxyXG59IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5oID0gKCkgPT4gKFwiYWFiZDlhMzUwODI5YzMxNmZjMGFcIikiXSwibmFtZXMiOlsiY29uc3RydWN0b3IiLCJnbCIsInNjZW5lIiwic2l6ZXMiLCJ0cmFuc2l0aW9uIiwidGhpcyIsImlkIiwiY29uc29sZSIsImxvZyIsImdyb3VwIiwiVHJhbnNmb3JtIiwiY3JlYXRlR2VvbWV0cnkiLCJjcmVhdGVHYWxsZXJpZXMiLCJzZXRQYXJlbnQiLCJzaG93IiwiZ2VvbWV0cnkiLCJQbGFuZSIsIlBpY3R1cmUiLCJnYWxsZXJpZXNFbGVtZW50cyIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvckFsbCIsImdhbGxlcmllcyIsIm1hcCIsImVsZW1lbnQiLCJpbmRleCIsIkdhbGxlcnkiLCJnYWxsZXJ5IiwiaGlkZSIsIm9uUmVzaXplIiwiZXZlbnQiLCJvblRvdWNoRG93biIsIm9uVG91Y2hNb3ZlIiwib25Ub3VjaFVwIiwib25XaGVlbCIsInBpeGVsWCIsInBpeGVsWSIsInVwZGF0ZSIsInNjcm9sbCIsImRlc3Ryb3kiLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwiaCJdLCJzb3VyY2VSb290IjoiIn0=