"use strict";self.webpackHotUpdatestarter("main",{"./app/classes/Page.js":(t,e,i)=>{i.r(e),i.d(e,{default:()=>g});var s=i("./node_modules/lodash/each.js"),a=i.n(s),n=i("./node_modules/lodash/map.js"),l=i.n(n),o=i("./node_modules/gsap/index.js"),r=i("./node_modules/prefix/index.js"),h=i.n(r),m=i("./app/animations/Title.js"),c=i("./app/animations/Paragraph.js"),d=i("./app/animations/Label.js"),p=i("./app/animations/Section.js"),u=i("./app/animations/Parallax.js"),f=i("./app/animations/Link.js"),w=i("./app/classes/Detection.js"),P=i("./app/classes/AsyncLoad.js");class g{constructor({id:t,element:e,elements:i}){this.id=t,this.selector=e,this.selectorChildren={...i,animationsTitles:'[data-animation="title"]',animationsParagraphs:'[data-animation="paragraph"]',animationsLabels:'[data-animation="label"]',animationsSection:'[data-animation="color"]',animationsParallax:'[data-animation="parallax"]',animationsLink:'[data-animation="link"]',preloaders:"[data-src]"},this.transformPrefix=h()("transform"),this.scroll={current:0,target:0,last:0,limit:0}}create(){this.element=document.querySelector(this.selector),this.elements={},this.scroll={current:0,target:0,last:0,limit:0},a()(this.selectorChildren,((t,e)=>{t instanceof window.HTMLElement||t instanceof window.NodeList||Array.isArray(t)?this.elements[e]=t:(this.elements[e]=this.element.querySelectorAll(t),0===this.elements[e].lenght?this.elements[e]=null:1===this.elements[e].lenght&&(this.elements[e]=document.querySelector(t)))})),this.createAnimations(),this.createPreloader()}createAnimations(){this.animations=[],this.animationsTitles=l()(this.elements.animationsTitles,(t=>new m.default({element:t}))),this.animations.push(...this.animationsTitles),this.animationsParagraphs=l()(this.elements.animationsParagraphs,(t=>new c.default({element:t}))),this.animations.push(...this.animationsParagraphs),this.animationsSection=l()(this.elements.animationsSection,(t=>new p.default({element:t}))),this.animations.push(...this.animationsSection),this.animationsLabels=l()(this.elements.animationsLabels,(t=>new d.default({element:t}))),this.animations.push(...this.animationsLabels),this.animationsParallax=l()(this.elements.animationsParallax,(t=>new u.default({element:t}))),this.animations.push(...this.animationsParallax),this.animationsLink=l()(this.elements.animationsLink,(t=>new f.default({element:t}))),this.animations.push(...this.animationsLink)}createPreloader(){this.preloaders=l()(this.elements.preloaders,(t=>new P.default({element:t})))}show(t){return new Promise((e=>{t?this.animationIn=t:(this.animationIn=o.default.timeline(),this.animationIn.fromTo(this.element,{autoAlpha:0},{autoAlpha:1})),this.animationIn.call((t=>{this.addEventListeners()}))}))}hide(){return new Promise((t=>{this.destroy(),this.animationOut=o.default.timeline(),this.animationOut.to(this.element,{autoAlpha:0,onComplete:t})}))}destroy(){}onTouchDown(t){w.default.isPhone&&(this.isDown=!0,this.scroll.position=this.scroll.current,this.start=t.touches?t.touches[0].clientY:t.clientY)}onTouchMove(t){if(!w.default.isPhone||!this.isDown)return;const e=t.touches?t.touches[0].clientY:t.clientY,i=9.3*(this.start-e);this.scroll.target=this.scroll.position+i}onTouchUp(){w.default.isPhone&&(this.isDown=!1)}onWheel({pixelY:t}){this.scroll.target+=t}onResize(){this.elements.wrapper&&(this.scroll.limit=this.elements.wrapper[0].clientHeight-window.innerHeight)}update(){this.scroll.target=o.default.utils.clamp(0,this.scroll.limit,this.scroll.target),this.scroll.current=o.default.utils.interpolate(this.scroll.current,this.scroll.target,.1),this.scroll.current<.01&&(this.scroll.current=0),this.elements.wrapper&&(this.elements.wrapper[0].style[this.transformPrefix]=`translateY(-${this.scroll.current}px)`),this.animations.forEach((t=>{t.update&&t.update(this.scroll)}))}addEventListeners(){}removeEventListeners(){}destroy(){this.removeEventListeners()}}}},(function(t){t.h=()=>"264a074a3738c37b8a29"}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5hZGUxN2I5ZmQ1NTkzOTY4NDUxNC5ob3QtdXBkYXRlLmpzIiwibWFwcGluZ3MiOiJzakJBa0JlLE1BQU1BLEVBQ25CQyxhQUFhLEdBQUVDLEVBQUYsUUFBTUMsRUFBTixTQUFlQyxJQUMxQkMsS0FBS0gsR0FBS0EsRUFDVkcsS0FBS0MsU0FBV0gsRUFDaEJFLEtBQUtFLGlCQUFtQixJQUNuQkgsRUFDSEksaUJBQWtCLDJCQUNsQkMscUJBQXNCLCtCQUN0QkMsaUJBQWtCLDJCQUNsQkMsa0JBQW1CLDJCQUNuQkMsbUJBQW9CLDhCQUNwQkMsZUFBZ0IsMEJBRWhCQyxXQUFZLGNBR2RULEtBQUtVLGdCQUFrQkMsSUFBTyxhQUc5QlgsS0FBS1ksT0FBUyxDQUNaQyxRQUFTLEVBQ1RDLE9BQVEsRUFDUkMsS0FBTSxFQUNOQyxNQUFPLEVBRVYsQ0FHREMsU0FDRWpCLEtBQUtGLFFBQVVvQixTQUFTQyxjQUFjbkIsS0FBS0MsVUFDM0NELEtBQUtELFNBQVcsQ0FBQyxFQUlqQkMsS0FBS1ksT0FBUyxDQUNaQyxRQUFTLEVBQ1RDLE9BQVEsRUFDUkMsS0FBTSxFQUNOQyxNQUFPLEdBR1RJLElBQUtwQixLQUFLRSxrQkFBa0IsQ0FBQ21CLEVBQU9DLEtBQzlCRCxhQUFpQkUsT0FBT0MsYUFBZUgsYUFBaUJFLE9BQU9FLFVBQVlDLE1BQU1DLFFBQVFOLEdBQzNGckIsS0FBS0QsU0FBU3VCLEdBQU9ELEdBRXJCckIsS0FBS0QsU0FBU3VCLEdBQU90QixLQUFLRixRQUFROEIsaUJBQWlCUCxHQUVqQixJQUE5QnJCLEtBQUtELFNBQVN1QixHQUFLTyxPQUNyQjdCLEtBQUtELFNBQVN1QixHQUFPLEtBQ2tCLElBQTlCdEIsS0FBS0QsU0FBU3VCLEdBQUtPLFNBQzVCN0IsS0FBS0QsU0FBU3VCLEdBQU9KLFNBQVNDLGNBQWNFLElBRS9DLElBR0hyQixLQUFLOEIsbUJBQ0w5QixLQUFLK0IsaUJBQ04sQ0FFREQsbUJBQ0U5QixLQUFLZ0MsV0FBYSxHQUdsQmhDLEtBQUtHLGlC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T0MsUUFBVWtDLEVBQUFBLFFBQUFBLE1BQUFBLFlBQXVCL0MsS0FBS1ksT0FBT0MsUUFBU2IsS0FBS1ksT0FBT0UsT0FBUSxJQUVsRmQsS0FBS1ksT0FBT0MsUUFBVSxNQUN4QmIsS0FBS1ksT0FBT0MsUUFBVSxHQUdwQmIsS0FBS0QsU0FBUzBFLFVBQ2hCekUsS0FBS0QsU0FBUzBFLFFBQVEsR0FBR0ksTUFBTTdFLEtBQUtVLGlCQUFvQixlQUFjVixLQUFLWSxPQUFPQyxjQUdwRmIsS0FBS2dDLFdBQVc4QyxTQUFRbkMsSUFDbEJBLEVBQVVpQyxRQUNaakMsRUFBVWlDLE9BQU81RSxLQUFLWSxPQUN2QixHQUVKLENBS0R3QyxvQkFDQyxDQUVEMkIsdUJBQ0MsQ0FRRHpCLFVBQ0V0RCxLQUFLK0Usc0JBQ04sRSxnQkN4UEhDLEVBQW9CQyxFQUFJLElBQU0sc0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zdGFydGVyLy4vYXBwL2NsYXNzZXMvUGFnZS5qcyIsIndlYnBhY2s6Ly9zdGFydGVyL3dlYnBhY2svcnVudGltZS9nZXRGdWxsSGFzaCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyEgQ3JlbyBzdGEgY2xhc3NlIHBlciBhdmVyZSB1biBwdW50byBpbiBjb21tdW5lIGluIHR1dHRlIGxlIHBhZ2luZSBjb3NpIGRhIGF2ZXJlIGxhIHBvc3NpYmlsaXTDoCBkaSBjaGlhbWFyZSBpIG1ldG9kaVxyXG4vLyEgdW5hIHNvbGEgdm9sdGEgc2VuemEgYmlzb2dubyBkaSBjaGlhbWFybGkgaW4gdHV0dGUgbGUgcGFnaW5lXHJcblxyXG5pbXBvcnQgZWFjaCBmcm9tICdsb2Rhc2gvZWFjaCdcclxuaW1wb3J0IG1hcCBmcm9tICdsb2Rhc2gvbWFwJ1xyXG5cclxuaW1wb3J0IEdTQVAgZnJvbSAnZ3NhcCdcclxuaW1wb3J0IFByZWZpeCBmcm9tICdwcmVmaXgnXHJcblxyXG5pbXBvcnQgVGl0bGUgZnJvbSAnYW5pbWF0aW9ucy9UaXRsZSdcclxuaW1wb3J0IFBhcmFncmFwaCBmcm9tICdhbmltYXRpb25zL1BhcmFncmFwaCdcclxuaW1wb3J0IExhYmVsIGZyb20gJ2FuaW1hdGlvbnMvTGFiZWwnXHJcbmltcG9ydCBTZWN0aW9uIGZyb20gJ2FuaW1hdGlvbnMvU2VjdGlvbidcclxuaW1wb3J0IFBhcmFsbGF4IGZyb20gJ2FuaW1hdGlvbnMvUGFyYWxsYXgnXHJcbmltcG9ydCBMaW5rIGZyb20gJy4uL2FuaW1hdGlvbnMvTGluaydcclxuaW1wb3J0IERldGVjdGlvbk1hbmFnZXIgZnJvbSAnLi9EZXRlY3Rpb24nXHJcblxyXG5pbXBvcnQgQXN5bmNMb2FkIGZyb20gJy4vQXN5bmNMb2FkJ1xyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQYWdlIHtcclxuICBjb25zdHJ1Y3RvciAoeyBpZCwgZWxlbWVudCwgZWxlbWVudHMgfSkge1xyXG4gICAgdGhpcy5pZCA9IGlkXHJcbiAgICB0aGlzLnNlbGVjdG9yID0gZWxlbWVudCAvLyEgLmFib3V0IGFkIGVzZW1waW8gcGFzc2F0byBkYSB1bmEgZGVsbGUgcGFnaW5lXHJcbiAgICB0aGlzLnNlbGVjdG9yQ2hpbGRyZW4gPSB7XHJcbiAgICAgIC4uLmVsZW1lbnRzLFxyXG4gICAgICBhbmltYXRpb25zVGl0bGVzOiAnW2RhdGEtYW5pbWF0aW9uPVwidGl0bGVcIl0nLFxyXG4gICAgICBhbmltYXRpb25zUGFyYWdyYXBoczogJ1tkYXRhLWFuaW1hdGlvbj1cInBhcmFncmFwaFwiXScsXHJcbiAgICAgIGFuaW1hdGlvbnNMYWJlbHM6ICdbZGF0YS1hbmltYXRpb249XCJsYWJlbFwiXScsXHJcbiAgICAgIGFuaW1hdGlvbnNTZWN0aW9uOiAnW2RhdGEtYW5pbWF0aW9uPVwiY29sb3JcIl0nLFxyXG4gICAgICBhbmltYXRpb25zUGFyYWxsYXg6ICdbZGF0YS1hbmltYXRpb249XCJwYXJhbGxheFwiXScsXHJcbiAgICAgIGFuaW1hdGlvbnNMaW5rOiAnW2RhdGEtYW5pbWF0aW9uPVwibGlua1wiXScsXHJcblxyXG4gICAgICBwcmVsb2FkZXJzOiAnW2RhdGEtc3JjXSdcclxuICAgIH1cclxuXHJcbiAgICB0aGlzLnRyYW5zZm9ybVByZWZpeCA9IFByZWZpeCgndHJhbnNmb3JtJylcclxuXHJcbiAgICAvLyogR2VzdGlvbmUgZGVsbG8gc2Nyb2xsXHJcbiAgICB0aGlzLnNjcm9sbCA9IHtcclxuICAgICAgY3VycmVudDogMCxcclxuICAgICAgdGFyZ2V0OiAwLFxyXG4gICAgICBsYXN0OiAwLFxyXG4gICAgICBsaW1pdDogMFxyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLy8gPyBNZXRvZG8gcGVyIGNyZWFyZSB1bmEgcGFnaW5hIGVkIG90dGVuZXJlIHR1dHRpIGdsaSBlbGVtZW50aSB1dGlsaSBwZXIgbGUgYW5pbWF6aW9uaSBldGNcclxuICBjcmVhdGUgKCkge1xyXG4gICAgdGhpcy5lbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0aGlzLnNlbGVjdG9yKS8vKiBBZCBlc2VtcGlvIGlsIC4gYWJvdXQgbWkgcml0b3JuYSBsYSBkaXYuYWJvdXQgY29uIHR1dHRvIGlsIHN1byBjb250ZW51dG9cclxuICAgIHRoaXMuZWxlbWVudHMgPSB7fSAvLyEgU29ubyB0dXR0ZSBsZSBjbGFzc2kgY2hlIHBhc3NvIGRhbGxhIGNsYXNzZSBwYWdpbmEgIGFkIGVzZW1waW9cclxuICAgIC8vISBpIGJvdHRvbmkgbyBhbHRybyBpbiBtb2RvIGRhIHBvdGVyIGZhcmUgbGUgYW5pbWF6aW9uaSwgZW50cmF0ZSBvIHVzY2l0ZVxyXG5cclxuICAgIC8vKiBHZXN0aW9uZSBkZWxsbyBzY3JvbGxcclxuICAgIHRoaXMuc2Nyb2xsID0ge1xyXG4gICAgICBjdXJyZW50OiAwLFxyXG4gICAgICB0YXJnZXQ6IDAsXHJcbiAgICAgIGxhc3Q6IDAsXHJcbiAgICAgIGxpbWl0OiAwXHJcbiAgICB9XHJcblxyXG4gICAgZWFjaCh0aGlzLnNlbGVjdG9yQ2hpbGRyZW4sIChlbnRyeSwga2V5KSA9PiB7XHJcbiAgICAgIGlmIChlbnRyeSBpbnN0YW5jZW9mIHdpbmRvdy5IVE1MRWxlbWVudCB8fCBlbnRyeSBpbnN0YW5jZW9mIHdpbmRvdy5Ob2RlTGlzdCB8fCBBcnJheS5pc0FycmF5KGVudHJ5KSkge1xyXG4gICAgICAgIHRoaXMuZWxlbWVudHNba2V5XSA9IGVudHJ5IC8vKiBzZSDDqSBnaWEgdW4gcXVlcnkgc2VsZWN0b3IgbG8gcGFzc28gZGlyZXR0YW1lbnRlXHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgdGhpcy5lbGVtZW50c1trZXldID0gdGhpcy5lbGVtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoZW50cnkpIC8vISBTZSBjZSBuw6kgcGl1IGRpIHVubywgYWQgZXNlbXBpbyBsZSBpbW1hZ2luaSBmYWNjaW8gdW4gc2VsZWN0b3IgYWxsIHBlciBhdmVyZSB1biBhcnJheVxyXG5cclxuICAgICAgICBpZiAodGhpcy5lbGVtZW50c1trZXldLmxlbmdodCA9PT0gMCkge1xyXG4gICAgICAgICAgdGhpcy5lbGVtZW50c1trZXldID0gbnVsbCAvLyogU2Ugw6kgdnVvdG8gcml0b3JubyBudWxsXHJcbiAgICAgICAgfSBlbHNlIGlmICh0aGlzLmVsZW1lbnRzW2tleV0ubGVuZ2h0ID09PSAxKSB7XHJcbiAgICAgICAgICB0aGlzLmVsZW1lbnRzW2tleV0gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGVudHJ5KSAvLyEgc2UgY8OpIHVuYSBzb2xhIGRpIHF1ZXN0ZSBjbGFzc2kgZmFjY2lvIHVuIHF1ZXJ5IHNlbGVjdG9yIGNvc2kgbm9uIG1pIGZhIHVuIGFycmF5XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9KVxyXG5cclxuICAgIHRoaXMuY3JlYXRlQW5pbWF0aW9ucygpXHJcbiAgICB0aGlzLmNyZWF0ZVByZWxvYWRlcigpXHJcbiAgfVxyXG5cclxuICBjcmVhdGVBbmltYXRpb25zICgpIHtcclxuICAgIHRoaXMuYW5pbWF0aW9ucyA9IFtdXHJcblxyXG4gICAgLy8qIFRpdGxlXHJcbiAgICB0aGlzLmFuaW1hdGlvbnNUaXRsZXMgPSBtYXAodGhpcy5lbGVtZW50cy5hbmltYXRpb25zVGl0bGVzLCBlbGVtZW50ID0+IHtcclxuICAgICAgcmV0dXJuIG5ldyBUaXRsZSh7IGVsZW1lbnQgfSlcclxuICAgIH0pXHJcblxyXG4gICAgdGhpcy5hbmltYXRpb25zLnB1c2goLi4udGhpcy5hbmltYXRpb25zVGl0bGVzKVxyXG5cclxuICAgIC8vKiBQYXJhZ3JhcGhzXHJcbiAgICB0aGlzLmFuaW1hdGlvbnNQYXJhZ3JhcGhzID0gbWFwKHRoaXMuZWxlbWVudHMuYW5pbWF0aW9uc1BhcmFncmFwaHMsIGVsZW1lbnQgPT4ge1xyXG4gICAgICByZXR1cm4gbmV3IFBhcmFncmFwaCh7IGVsZW1lbnQgfSlcclxuICAgIH0pXHJcblxyXG4gICAgdGhpcy5hbmltYXRpb25zLnB1c2goLi4udGhpcy5hbmltYXRpb25zUGFyYWdyYXBocylcclxuXHJcbiAgICAvLyogU1VCUGFyYWdyYXBoc1xyXG4gICAgdGhpcy5hbmltYXRpb25zU2VjdGlvbiA9IG1hcCh0aGlzLmVsZW1lbnRzLmFuaW1hdGlvbnNTZWN0aW9uLCBlbGVtZW50ID0+IHtcclxuICAgICAgcmV0dXJuIG5ldyBTZWN0aW9uKHsgZWxlbWVudCB9KVxyXG4gICAgfSlcclxuXHJcbiAgICB0aGlzLmFuaW1hdGlvbnMucHVzaCguLi50aGlzLmFuaW1hdGlvbnNTZWN0aW9uKVxyXG5cclxuICAgIC8vKiBMYWJlbHNcclxuICAgIHRoaXMuYW5pbWF0aW9uc0xhYmVscyA9IG1hcCh0aGlzLmVsZW1lbnRzLmFuaW1hdGlvbnNMYWJlbHMsIGVsZW1lbnQgPT4ge1xyXG4gICAgICByZXR1cm4gbmV3IExhYmVsKHsgZWxlbWVudCB9KVxyXG4gICAgfSlcclxuICAgIHRoaXMuYW5pbWF0aW9ucy5wdXNoKC4uLnRoaXMuYW5pbWF0aW9uc0xhYmVscylcclxuXHJcbiAgICAvLyogUGFyYWxsYXhcclxuICAgIHRoaXMuYW5pbWF0aW9uc1BhcmFsbGF4ID0gbWFwKHRoaXMuZWxlbWVudHMuYW5pbWF0aW9uc1BhcmFsbGF4LCBlbGVtZW50ID0+IHtcclxuICAgICAgcmV0dXJuIG5ldyBQYXJhbGxheCh7IGVsZW1lbnQgfSlcclxuICAgIH0pXHJcblxyXG4gICAgdGhpcy5hbmltYXRpb25zLnB1c2goLi4udGhpcy5hbmltYXRpb25zUGFyYWxsYXgpXHJcblxyXG4gICAgLy8qIExpbmtcclxuICAgIHRoaXMuYW5pbWF0aW9uc0xpbmsgPSBtYXAodGhpcy5lbGVtZW50cy5hbmltYXRpb25zTGluaywgZWxlbWVudCA9PiB7XHJcbiAgICAgIHJldHVybiBuZXcgTGluayh7IGVsZW1lbnQgfSlcclxuICAgIH0pXHJcblxyXG4gICAgdGhpcy5hbmltYXRpb25zLnB1c2goLi4udGhpcy5hbmltYXRpb25zTGluaylcclxuICB9XHJcblxyXG4gIGNyZWF0ZVByZWxvYWRlciAoKSB7XHJcbiAgICB0aGlzLnByZWxvYWRlcnMgPSBtYXAodGhpcy5lbGVtZW50cy5wcmVsb2FkZXJzLCBlbGVtZW50ID0+IHtcclxuICAgICAgcmV0dXJuIG5ldyBBc3luY0xvYWQoeyBlbGVtZW50IH0pIC8vISBDUkVBUkUgTEUgSU1NQUdJTkkgRE9QTyBDQU1CSU8gUEFHSU5BXHJcbiAgICB9KVxyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICAgKiAvLyFBbmltYXRpb25cclxuICAgICAqL1xyXG4gIHNob3cgKGFuaW1hdGlvbikge1xyXG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKHJlc29sdmUgPT4ge1xyXG4gICAgICBpZiAoYW5pbWF0aW9uKSB7XHJcbiAgICAgICAgdGhpcy5hbmltYXRpb25JbiA9IGFuaW1hdGlvblxyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIHRoaXMuYW5pbWF0aW9uSW4gPSBHU0FQLnRpbWVsaW5lKClcclxuICAgICAgICB0aGlzLmFuaW1hdGlvbkluLmZyb21Ubyh0aGlzLmVsZW1lbnQsIHtcclxuICAgICAgICAgIGF1dG9BbHBoYTogMFxyXG4gICAgICAgIH0sIHtcclxuICAgICAgICAgIGF1dG9BbHBoYTogMVxyXG4gICAgICAgICAgLy8gb25Db21wbGV0ZTogcmVzb2x2ZVxyXG4gICAgICAgIH0pXHJcbiAgICAgIH1cclxuXHJcbiAgICAgIHRoaXMuYW5pbWF0aW9uSW4uY2FsbChfID0+IHtcclxuICAgICAgICB0aGlzLmFkZEV2ZW50TGlzdGVuZXJzKClcclxuICAgICAgfSlcclxuICAgIH0pXHJcbiAgfVxyXG5cclxuICBoaWRlICgpIHtcclxuICAgIHJldHVybiBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHtcclxuICAgICAgdGhpcy5kZXN0cm95KClcclxuICAgICAgdGhpcy5hbmltYXRpb25PdXQgPSBHU0FQLnRpbWVsaW5lKClcclxuXHJcbiAgICAgIHRoaXMuYW5pbWF0aW9uT3V0LnRvKHRoaXMuZWxlbWVudCwge1xyXG4gICAgICAgIGF1dG9BbHBoYTogMCxcclxuICAgICAgICBvbkNvbXBsZXRlOiByZXNvbHZlXHJcbiAgICAgIH0pXHJcbiAgICB9KVxyXG4gIH1cclxuXHJcbiAgZGVzdHJveSAoKSB7XHJcblxyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICAgKiAvLyFFdmVudFxyXG4gICAgICovXHJcbiAgLy8qIERlYnVnIGRlbGxvIHNjcm9sbCBwZXIgbG8gc21vb3Roc2Nyb2xsXHJcblxyXG4gIG9uVG91Y2hEb3duIChldmVudCkge1xyXG4gICAgaWYgKCFEZXRlY3Rpb25NYW5hZ2VyLmlzUGhvbmUpIHJldHVyblxyXG5cclxuICAgIHRoaXMuaXNEb3duID0gdHJ1ZVxyXG5cclxuICAgIHRoaXMuc2Nyb2xsLnBvc2l0aW9uID0gdGhpcy5zY3JvbGwuY3VycmVudFxyXG4gICAgdGhpcy5zdGFydCA9IGV2ZW50LnRvdWNoZXMgPyBldmVudC50b3VjaGVzWzBdLmNsaWVudFkgOiBldmVudC5jbGllbnRZXHJcbiAgfVxyXG5cclxuICBvblRvdWNoTW92ZSAoZXZlbnQpIHtcclxuICAgIGlmICghRGV0ZWN0aW9uTWFuYWdlci5pc1Bob25lIHx8ICF0aGlzLmlzRG93bikgcmV0dXJuXHJcblxyXG4gICAgY29uc3QgeSA9IGV2ZW50LnRvdWNoZXMgPyBldmVudC50b3VjaGVzWzBdLmNsaWVudFkgOiBldmVudC5jbGllbnRZXHJcbiAgICBjb25zdCBkaXN0YW5jZSA9ICh0aGlzLnN0YXJ0IC0geSkgKiA5LjNcclxuXHJcbiAgICB0aGlzLnNjcm9sbC50YXJnZXQgPSB0aGlzLnNjcm9sbC5wb3NpdGlvbiArIGRpc3RhbmNlXHJcbiAgfVxyXG5cclxuICBvblRvdWNoVXAgKCkge1xyXG4gICAgaWYgKCFEZXRlY3Rpb25NYW5hZ2VyLmlzUGhvbmUpIHJldHVyblxyXG5cclxuICAgIHRoaXMuaXNEb3duID0gZmFsc2VcclxuICB9XHJcblxyXG4gIG9uV2hlZWwgKHsgcGl4ZWxZIH0pIHtcclxuICAgIHRoaXMuc2Nyb2xsLnRhcmdldCArPSBwaXhlbFlcclxuICB9XHJcblxyXG4gIG9uUmVzaXplICgpIHtcclxuICAgIGlmICh0aGlzLmVsZW1lbnRzLndyYXBwZXIpIHtcclxuICAgICAgdGhpcy5zY3JvbGwubGltaXQgPSB0aGlzLmVsZW1lbnRzLndyYXBwZXJbMF0uY2xpZW50SGVpZ2h0IC0gd2luZG93LmlubmVySGVpZ2h0XHJcbiAgICB9XHJcblxyXG4gICAgLy8gZWFjaCh0aGlzLmFuaW1hdGlvbnMsIGFuaW1hdGlvbiA9PiBhbmltYXRpb24ub25SZXNpemUoKSlcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAgICogLy8hTG9vcFxyXG4gICAgICovXHJcbiAgdXBkYXRlICgpIHtcclxuICAgIHRoaXMuc2Nyb2xsLnRhcmdldCA9IEdTQVAudXRpbHMuY2xhbXAoMCwgdGhpcy5zY3JvbGwubGltaXQsIHRoaXMuc2Nyb2xsLnRhcmdldClcclxuXHJcbiAgICB0aGlzLnNjcm9sbC5jdXJyZW50ID0gR1NBUC51dGlscy5pbnRlcnBvbGF0ZSh0aGlzLnNjcm9sbC5jdXJyZW50LCB0aGlzLnNjcm9sbC50YXJnZXQsIDAuMSlcclxuXHJcbiAgICBpZiAodGhpcy5zY3JvbGwuY3VycmVudCA8IDAuMDEpIHtcclxuICAgICAgdGhpcy5zY3JvbGwuY3VycmVudCA9IDBcclxuICAgIH1cclxuXHJcbiAgICBpZiAodGhpcy5lbGVtZW50cy53cmFwcGVyKSB7XHJcbiAgICAgIHRoaXMuZWxlbWVudHMud3JhcHBlclswXS5zdHlsZVt0aGlzLnRyYW5zZm9ybVByZWZpeF0gPSBgdHJhbnNsYXRlWSgtJHt0aGlzLnNjcm9sbC5jdXJyZW50fXB4KWBcclxuICAgIH1cclxuXHJcbiAgICB0aGlzLmFuaW1hdGlvbnMuZm9yRWFjaChhbmltYXRpb24gPT4ge1xyXG4gICAgICBpZiAoYW5pbWF0aW9uLnVwZGF0ZSkge1xyXG4gICAgICAgIGFuaW1hdGlvbi51cGRhdGUodGhpcy5zY3JvbGwpXHJcbiAgICAgIH1cclxuICAgIH0pXHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgICAqIC8vIUxpc3RlbmVyc1xyXG4gICAgICovXHJcbiAgYWRkRXZlbnRMaXN0ZW5lcnMgKCkge1xyXG4gIH1cclxuXHJcbiAgcmVtb3ZlRXZlbnRMaXN0ZW5lcnMgKCkge1xyXG4gIH1cclxuXHJcbiAgLy8qIEZpbmUgZGVidWcgZGVsbG8gc2Nyb2xsXHJcblxyXG4gIC8qKlxyXG4gICAgICogLy8hRGVzdHJveVxyXG4gICAgICovXHJcblxyXG4gIGRlc3Ryb3kgKCkge1xyXG4gICAgdGhpcy5yZW1vdmVFdmVudExpc3RlbmVycygpXHJcbiAgfVxyXG59XHJcbiIsIl9fd2VicGFja19yZXF1aXJlX18uaCA9ICgpID0+IChcIjI2NGEwNzRhMzczOGMzN2I4YTI5XCIpIl0sIm5hbWVzIjpbIlBhZ2UiLCJjb25zdHJ1Y3RvciIsImlkIiwiZWxlbWVudCIsImVsZW1lbnRzIiwidGhpcyIsInNlbGVjdG9yIiwic2VsZWN0b3JDaGlsZHJlbiIsImFuaW1hdGlvbnNUaXRsZXMiLCJhbmltYXRpb25zUGFyYWdyYXBocyIsImFuaW1hdGlvbnNMYWJlbHMiLCJhbmltYXRpb25zU2VjdGlvbiIsImFuaW1hdGlvbnNQYXJhbGxheCIsImFuaW1hdGlvbnNMaW5rIiwicHJlbG9hZGVycyIsInRyYW5zZm9ybVByZWZpeCIsIlByZWZpeCIsInNjcm9sbCIsImN1cnJlbnQiLCJ0YXJnZXQiLCJsYXN0IiwibGltaXQiLCJjcmVhdGUiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJlYWNoIiwiZW50cnkiLCJrZXkiLCJ3aW5kb3ciLCJIVE1MRWxlbWVudCIsIk5vZGVMaXN0IiwiQXJyYXkiLCJpc0FycmF5IiwicXVlcnlTZWxlY3RvckFsbCIsImxlbmdodCIsImNyZWF0ZUFuaW1hdGlvbnMiLCJjcmVhdGVQcmVsb2FkZXIiLCJhbmltYXRpb25zIiwibWFwIiwiVGl0bGUiLCJwdXNoIiwiUGFyYWdyYXBoIiwiU2VjdGlvbiIsIkxhYmVsIiwiUGFyYWxsYXgiLCJMaW5rIiwiQXN5bmNMb2FkIiwic2hvdyIsImFuaW1hdGlvbiIsIlByb21pc2UiLCJyZXNvbHZlIiwiYW5pbWF0aW9uSW4iLCJHU0FQIiwiZnJvbVRvIiwiYXV0b0FscGhhIiwiY2FsbCIsIl8iLCJhZGRFdmVudExpc3RlbmVycyIsImhpZGUiLCJkZXN0cm95IiwiYW5pbWF0aW9uT3V0IiwidG8iLCJvbkNvbXBsZXRlIiwib25Ub3VjaERvd24iLCJldmVudCIsIkRldGVjdGlvbk1hbmFnZXIiLCJpc0Rvd24iLCJwb3NpdGlvbiIsInN0YXJ0IiwidG91Y2hlcyIsImNsaWVudFkiLCJvblRvdWNoTW92ZSIsInkiLCJkaXN0YW5jZSIsIm9uVG91Y2hVcCIsIm9uV2hlZWwiLCJwaXhlbFkiLCJvblJlc2l6ZSIsIndyYXBwZXIiLCJjbGllbnRIZWlnaHQiLCJpbm5lckhlaWdodCIsInVwZGF0ZSIsInN0eWxlIiwiZm9yRWFjaCIsInJlbW92ZUV2ZW50TGlzdGVuZXJzIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsImgiXSwic291cmNlUm9vdCI6IiJ9