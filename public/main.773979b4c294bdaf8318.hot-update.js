/*! For license information please see main.773979b4c294bdaf8318.hot-update.js.LICENSE.txt */
"use strict";self.webpackHotUpdatestarter("main",{"./app/classes/Page.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>p});var i=n("./node_modules/lodash/each.js"),s=n.n(i),a=n("./node_modules/lodash/map.js"),o=n.n(a),r=n("../../../node_modules/gsap/index.js"),l=n("./node_modules/prefix/index.js"),h=n.n(l),m=n("./node_modules/normalize-wheel/index.js"),d=n.n(m);Object(function(){var e=new Error("Cannot find module '../animations/Title'");throw e.code="MODULE_NOT_FOUND",e}()),Object(function(){var e=new Error("Cannot find module '../animations/Paragraph'");throw e.code="MODULE_NOT_FOUND",e}()),Object(function(){var e=new Error("Cannot find module '../animations/Label'");throw e.code="MODULE_NOT_FOUND",e}());var c=n("./app/classes/Colors.js"),u=n("./app/classes/AsyncLoad.js");class p{constructor({id:e,element:t,elements:n={}}){this.selector=t,this.selectorChildren={...n,animationTitles:'[data-animation="title"]',animationsParagraphs:'[data-animation="paragraph"]',animationsLabels:'[data-animation="label"]',animationsHighlights:'[data-animation="highlight"]',preloaders:"[data-src]"},this.id=e,this.transformPrefix=h()("transform"),this.onMouseWheelEvent=this.onMouseWheel.bind(this)}create(){this.element=document.querySelector(this.selector),this.elements={},this.scroll={current:0,target:0,last:0,limit:0},s()(this.selectorChildren,((e,t)=>{e instanceof window.HTMLElement||e instanceof window.NodeList||Array.isArray(e)?this.elements[t]=e:(this.elements[t]=this.element.querySelectorAll(e),0===this.elements[t].length?this.elements[t]=null:1===this.elements[t].length&&(this.elements[t]=document.querySelector(e)))})),this.createAnimations(),this.createPreloader()}createAnimations(){this.animations=[],this.animationsTitles=o()(this.elements.animationTitles,(e=>new Object(function(){var e=new Error("Cannot find module '../animations/Title'");throw e.code="MODULE_NOT_FOUND",e}())({element:e}))),this.animations.push(...this.animationsTitles),this.animationsParagraphs=o()(this.elements.animationsParagraphs,(e=>new Object(function(){var e=new Error("Cannot find module '../animations/Paragraph'");throw e.code="MODULE_NOT_FOUND",e}())({element:e}))),this.animations.push(...this.animationsParagraphs),this.animationsLabels=o()(this.elements.animationsLabels,(e=>new Object(function(){var e=new Error("Cannot find module '../animations/Label'");throw e.code="MODULE_NOT_FOUND",e}())({element:e}))),this.animations.push(...this.animationsLabels),this.animationsHighlights=o()(this.elements.animationsHighlights,(e=>new Object(function(){var e=new Error("Cannot find module '../animations/Label'");throw e.code="MODULE_NOT_FOUND",e}())({element:e}))),this.animations.push(...this.animationsHighlights)}createPreloader(){this.preloaders=o()(this.elements.preloaders,(e=>new u.default({element:e})))}show(){return new Promise((e=>{c.ColorsManager.change({backgroundColor:this.element.getAttribute("data-background"),color:this.element.getAttribute("data-color")}),this.animationIn=r.default.timeline(),console.log("colore"),this.animationIn.fromTo(this.element,{autoAlpha:0},{autoAlpha:1}),this.animationIn.call((t=>{this.addEventListeners(),e()}))}))}hide(){return new Promise((e=>{this.destroy(),this.animationOut=r.default.timeline(),this.animationOut.to(this.element,{autoAlpha:0,onComplete:e})}))}destroy(){this.removeEventListeners()}onMouseWheel(e){const{pixelY:t}=d()(e);this.scroll.target+=t}onResize(){this.elements.wrapper&&(this.scroll.limit=this.elements.wrapper.clientHeight-window.innerHeight),s()(this.animations,(e=>e.onResize()))}update(){this.scroll.target=r.default.utils.clamp(0,this.scroll.limit,this.scroll.target),this.scroll.current=r.default.utils.interpolate(this.scroll.current,this.scroll.target,.1),this.scroll.current<.01&&(this.scroll.current=0),this.elements.wrapper&&(this.elements.wrapper.style[this.transformPrefix]=`translateY(-${this.scroll.current}px)`)}addEventListeners(){window.addEventListener("mousewheel",this.onMouseWheelEvent)}removeEventListeners(){window.removeEventListener("mousewheel",this.onMouseWheelEvent)}}}},(function(e){e.h=()=>"8d4963b11347551eb852"}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,