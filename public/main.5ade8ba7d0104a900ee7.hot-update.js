/*! For license information please see main.5ade8ba7d0104a900ee7.hot-update.js.LICENSE.txt */
"use strict";self.webpackHotUpdatestarter("main",{"./app/components/Canvas/Media.js":(e,t,s)=>{s.r(t),s.d(t,{default:()=>o});var i=s("./node_modules/ogl/src/core/Texture.js"),h=s("./node_modules/ogl/src/core/Program.js"),a=s("./node_modules/ogl/src/core/Mesh.js"),r=s("./app/shaders/plane-fragment.glsl"),n=s("./app/shaders/plane-vertex.glsl");class o{constructor({element:e,geometry:t,gl:s,index:i,scene:h,sizes:a}){this.element=e,this.geometry=t,this.gl=s,this.scene=h,this.index=i,this.sizes=a,this.createTexture(),this.createProgram(),this.createMesh(),this.extra={x:0,y:0}}createTexture(){this.texture=new i.Texture(this.gl),this.image=new window.Image,this.image.crossOrigin="anonymous",this.image.src=this.element.getAttribute("data-src"),this.image.onload=e=>this.texture.image=this.image}createProgram(){this.program=new h.Program(this.gl,{fragment:r.default,vertex:n.default,uniforms:{tMap:{value:this.texture}}})}createMesh(){this.mesh=new a.Mesh(this.gl,{geometry:this.geometry,program:this.program}),this.mesh.setParent(this.scene),this.mesh.scale.x=2}createBounds({sizes:e}){this.sizes=e,this.bounds=this.element.getBoundingClientRect(),this.updateScale(),this.updateX(),this.updateY()}onResize(e,t){this.extra={x:0,y:0},this.createBounds(e),this.updateX(t?t.x:0),this.updateY(t?t.y:0)}updateScale(){this.width=this.bounds.width/window.innerWidth,this.height=this.bounds.height/window.innerHeight,this.mesh.scale.x=this.sizes.width*this.width,this.mesh.scale.y=this.sizes.height*this.height}updateX(e=0){this.x=(this.bounds.left+e)/window.innerWidth,this.mesh.position.x=-this.sizes.width/2+this.mesh.scale.x/2+this.x*this.sizes.width+this.extra.x}updateY(e=0){this.y=(this.bounds.top+e)/window.innerHeight,this.mesh.position.y=this.sizes.height/2-this.mesh.scale.y/2-this.y*this.sizes.height+this.extra.y}update(e){this.bounds&&(this.updateX(e.x),this.updateY(e.y))}}}},(function(e){e.h=()=>"4a4967679acf596bb7a1"}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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cUMsT0FBT1IsR0FDRW5DLEtBQUs2QixTQUNWN0IsS0FBS2dDLFFBQVFHLEVBQU85QixHQUNwQkwsS0FBS2lDLFFBQVFFLEVBQU83QixHQUN2QixrQkN2R0xzQyxFQUFvQkMsRUFBSSxJQUFNIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3RhcnRlci8uL2FwcC9jb21wb25lbnRzL0NhbnZhcy9NZWRpYS5qcyIsIndlYnBhY2s6Ly9zdGFydGVyL3dlYnBhY2svcnVudGltZS9nZXRGdWxsSGFzaCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBNZXNoLCBQcm9ncmFtLCBUZXh0dXJlIH0gZnJvbSAnb2dsJ1xyXG5cclxuaW1wb3J0IGZyYWdtZW50IGZyb20gJ3NoYWRlcnMvcGxhbmUtZnJhZ21lbnQuZ2xzbCdcclxuaW1wb3J0IHZlcnRleCBmcm9tICdzaGFkZXJzL3BsYW5lLXZlcnRleC5nbHNsJ1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgTWVkaWEge1xyXG4gICAgY29uc3RydWN0b3IoeyBlbGVtZW50LCBnZW9tZXRyeSwgZ2wsIGluZGV4LCBzY2VuZSwgc2l6ZXMgfSkge1xyXG4gICAgICAgIHRoaXMuZWxlbWVudCA9IGVsZW1lbnRcclxuICAgICAgICB0aGlzLmdlb21ldHJ5ID0gZ2VvbWV0cnlcclxuICAgICAgICB0aGlzLmdsID0gZ2xcclxuICAgICAgICB0aGlzLnNjZW5lID0gc2NlbmVcclxuICAgICAgICB0aGlzLmluZGV4ID0gaW5kZXhcclxuICAgICAgICB0aGlzLnNpemVzID0gc2l6ZXNcclxuXHJcbiAgICAgICAgdGhpcy5jcmVhdGVUZXh0dXJlKClcclxuICAgICAgICB0aGlzLmNyZWF0ZVByb2dyYW0oKVxyXG4gICAgICAgIHRoaXMuY3JlYXRlTWVzaCgpXHJcblxyXG4gICAgICAgIHRoaXMuZXh0cmEgPSB7XHJcbiAgICAgICAgICAgIHg6IDAsXHJcbiAgICAgICAgICAgIHk6IDBcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBjcmVhdGVUZXh0dXJlKCkge1xyXG4gICAgICAgIHRoaXMudGV4dHVyZSA9IG5ldyBUZXh0dXJlKHRoaXMuZ2wpXHJcblxyXG5cclxuICAgICAgICB0aGlzLmltYWdlID0gbmV3IHdpbmRvdy5JbWFnZSgpXHJcbiAgICAgICAgdGhpcy5pbWFnZS5jcm9zc09yaWdpbiA9ICdhbm9ueW1vdXMnXHJcbiAgICAgICAgdGhpcy5pbWFnZS5zcmMgPSB0aGlzLmVsZW1lbnQuZ2V0QXR0cmlidXRlKCdkYXRhLXNyYycpXHJcbiAgICAgICAgdGhpcy5pbWFnZS5vbmxvYWQgPSBfID0+ICh0aGlzLnRleHR1cmUuaW1hZ2UgPSB0aGlzLmltYWdlKVxyXG4gICAgfVxyXG5cclxuICAgIGNyZWF0ZVByb2dyYW0oKSB7XHJcblxyXG4gICAgICAgIHRoaXMucHJvZ3JhbSA9IG5ldyBQcm9ncmFtKHRoaXMuZ2wsIHtcclxuICAgICAgICAgICAgZnJhZ21lbnQsXHJcbiAgICAgICAgICAgIHZlcnRleCxcclxuICAgICAgICAgICAgdW5pZm9ybXM6IHtcclxuICAgICAgICAgICAgICAgIHRNYXA6IHsgdmFsdWU6IHRoaXMudGV4dHVyZSB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KVxyXG5cclxuICAgIH1cclxuXHJcbiAgICBjcmVhdGVNZXNoKCkge1xyXG4gICAgICAgIHRoaXMubWVzaCA9IG5ldyBNZXNoKHRoaXMuZ2wsIHtcclxuICAgICAgICAgICAgZ2VvbWV0cnk6IHRoaXMuZ2VvbWV0cnksXHJcbiAgICAgICAgICAgIHByb2dyYW06IHRoaXMucHJvZ3JhbVxyXG4gICAgICAgIH0pXHJcblxyXG4gICAgICAgIHRoaXMubWVzaC5zZXRQYXJlbnQodGhpcy5zY2VuZSlcclxuXHJcbiAgICAgICAgdGhpcy5tZXNoLnNjYWxlLnggPSAyXHJcbiAgICB9XHJcblxyXG4gICAgY3JlYXRlQm91bmRzKHsgc2l6ZXMgfSkge1xyXG4gICAgICAgIHRoaXMuc2l6ZXMgPSBzaXplc1xyXG5cclxuICAgICAgICB0aGlzLmJvdW5kcyA9IHRoaXMuZWxlbWVudC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKVxyXG5cclxuICAgICAgICB0aGlzLnVwZGF0ZVNjYWxlKClcclxuICAgICAgICB0aGlzLnVwZGF0ZVgoKVxyXG4gICAgICAgIHRoaXMudXBkYXRlWSgpXHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAgKiBFdmVudHNcclxuICAgICAgKi9cclxuICAgIG9uUmVzaXplKHNpemVzLCBzY3JvbGwpIHtcclxuICAgICAgICB0aGlzLmV4dHJhID0ge1xyXG4gICAgICAgICAgICB4OiAwLFxyXG4gICAgICAgICAgICB5OiAwXHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMuY3JlYXRlQm91bmRzKHNpemVzKVxyXG4gICAgICAgIHRoaXMudXBkYXRlWChzY3JvbGwgPyBzY3JvbGwueCA6IDApXHJcbiAgICAgICAgdGhpcy51cGRhdGVZKHNjcm9sbCA/IHNjcm9sbC55IDogMClcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIExPT1BcclxuICAgICAqL1xyXG4gICAgdXBkYXRlU2NhbGUoKSB7XHJcbiAgICAgICAgdGhpcy53aWR0aCA9IHRoaXMuYm91bmRzLndpZHRoIC8gd2luZG93LmlubmVyV2lkdGhcclxuICAgICAgICB0aGlzLmhlaWdodCA9IHRoaXMuYm91bmRzLmhlaWdodCAvIHdpbmRvdy5pbm5lckhlaWdodFxyXG5cclxuICAgICAgICB0aGlzLm1lc2guc2NhbGUueCA9IHRoaXMuc2l6ZXMud2lkdGggKiB0aGlzLndpZHRoXHJcbiAgICAgICAgdGhpcy5tZXNoLnNjYWxlLnkgPSB0aGlzLnNpemVzLmhlaWdodCAqIHRoaXMuaGVpZ2h0XHJcbiAgICB9XHJcblxyXG4gICAgdXBkYXRlWCh4ID0gMCkge1xyXG4gICAgICAgIHRoaXMueCA9ICh0aGlzLmJvdW5kcy5sZWZ0ICsgeCkgLyB3aW5kb3cuaW5uZXJXaWR0aFxyXG4gICAgICAgIHRoaXMubWVzaC5wb3NpdGlvbi54ID0gKC10aGlzLnNpemVzLndpZHRoIC8gMikgKyAodGhpcy5tZXNoLnNjYWxlLnggLyAyKSArICh0aGlzLnggKiB0aGlzLnNpemVzLndpZHRoKSArIHRoaXMuZXh0cmEueFxyXG4gICAgfVxyXG5cclxuICAgIHVwZGF0ZVkoeSA9IDApIHtcclxuICAgICAgICB0aGlzLnkgPSAodGhpcy5ib3VuZHMudG9wICsgeSkgLyB3aW5kb3cuaW5uZXJIZWlnaHRcclxuICAgICAgICB0aGlzLm1lc2gucG9zaXRpb24ueSA9ICh0aGlzLnNpemVzLmhlaWdodCAvIDIpIC0gKHRoaXMubWVzaC5zY2FsZS55IC8gMikgLSAodGhpcy55ICogdGhpcy5zaXplcy5oZWlnaHQpICsgdGhpcy5leHRyYS55XHJcbiAgICB9XHJcblxyXG4gICAgdXBkYXRlKHNjcm9sbCkge1xyXG4gICAgICAgIGlmICghdGhpcy5ib3VuZHMpIHJldHVyblxyXG4gICAgICAgIHRoaXMudXBkYXRlWChzY3JvbGwueClcclxuICAgICAgICB0aGlzLnVwZGF0ZVkoc2Nyb2xsLnkpXHJcbiAgICB9XHJcblxyXG5cclxufSIsIl9fd2VicGFja19yZXF1aXJlX18uaCA9ICgpID0+IChcIjRhNDk2NzY3OWFjZjU5NmJiN2ExXCIpIl0sIm5hbWVzIjpbIk1lZGlhIiwiY29uc3RydWN0b3IiLCJlbGVtZW50IiwiZ2VvbWV0cnkiLCJnbCIsImluZGV4Iiwic2NlbmUiLCJzaXplcyIsInRoaXMiLCJjcmVhdGVUZXh0dXJlIiwiY3JlYXRlUHJvZ3JhbSIsImNyZWF0ZU1lc2giLCJleHRyYSIsIngiLCJ5IiwidGV4dHVyZSIsIlRleHR1cmUiLCJpbWFnZSIsIndpbmRvdyIsIkltYWdlIiwiY3Jvc3NPcmlnaW4iLCJzcmMiLCJnZXRBdHRyaWJ1dGUiLCJvbmxvYWQiLCJfIiwicHJvZ3JhbSIsIlByb2dyYW0iLCJmcmFnbWVudCIsInZlcnRleCIsInVuaWZvcm1zIiwidE1hcCIsInZhbHVlIiwibWVzaCIsIk1lc2giLCJzZXRQYXJlbnQiLCJzY2FsZSIsImNyZWF0ZUJvdW5kcyIsImJvdW5kcyIsImdldEJvdW5kaW5nQ2xpZW50UmVjdCIsInVwZGF0ZVNjYWxlIiwidXBkYXRlWCIsInVwZGF0ZVkiLCJvblJlc2l6ZSIsInNjcm9sbCIsIndpZHRoIiwiaW5uZXJXaWR0aCIsImhlaWdodCIsImlubmVySGVpZ2h0IiwibGVmdCIsInBvc2l0aW9uIiwidG9wIiwidXBkYXRlIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsImgiXSwic291cmNlUm9vdCI6IiJ9